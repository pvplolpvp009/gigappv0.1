{"ast":null,"code":"import _classCallCheck from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nvar FocusGesture = /*#__PURE__*/function (_Feature) {\n  _inherits(FocusGesture, _Feature);\n\n  var _super = _createSuper(FocusGesture);\n\n  function FocusGesture() {\n    var _this;\n\n    _classCallCheck(this, FocusGesture);\n\n    _this = _super.apply(this, arguments);\n    _this.isActive = false;\n    return _this;\n  }\n\n  _createClass(FocusGesture, [{\n    key: \"onFocus\",\n    value: function onFocus() {\n      var isFocusVisible = false;\n      /**\n       * If this element doesn't match focus-visible then don't\n       * apply whileHover. But, if matches throws that focus-visible\n       * is not a valid selector then in that browser outline styles will be applied\n       * to the element by default and we want to match that behaviour with whileFocus.\n       */\n\n      try {\n        isFocusVisible = this.node.current.matches(\":focus-visible\");\n      } catch (e) {\n        isFocusVisible = true;\n      }\n\n      if (!isFocusVisible || !this.node.animationState) return;\n      this.node.animationState.setActive(\"whileFocus\", true);\n      this.isActive = true;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      if (!this.isActive || !this.node.animationState) return;\n      this.node.animationState.setActive(\"whileFocus\", false);\n      this.isActive = false;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      var _this2 = this;\n\n      this.unmount = pipe(addDomEvent(this.node.current, \"focus\", function () {\n        return _this2.onFocus();\n      }), addDomEvent(this.node.current, \"blur\", function () {\n        return _this2.onBlur();\n      }));\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {}\n  }]);\n\n  return FocusGesture;\n}(Feature);\n\nexport { FocusGesture };","map":{"version":3,"names":["addDomEvent","Feature","pipe","FocusGesture","arguments","isActive","isFocusVisible","node","current","matches","e","animationState","setActive","unmount","onFocus","onBlur"],"sources":["C:/Users/pvplo/OneDrive/Рабочий стол/editpallav-main/node_modules/framer-motion/dist/es/gestures/focus.mjs"],"sourcesContent":["import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n"],"mappings":";;;;AAAA,SAASA,WAAT,QAA4B,6BAA5B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;;IAEMC,Y;;;;;EACF,wBAAc;IAAA;;IAAA;;IACV,2BAASC,SAAT;IACA,MAAKC,QAAL,GAAgB,KAAhB;IAFU;EAGb;;;;WACD,mBAAU;MACN,IAAIC,cAAc,GAAG,KAArB;MACA;AACR;AACA;AACA;AACA;AACA;;MACQ,IAAI;QACAA,cAAc,GAAG,KAAKC,IAAL,CAAUC,OAAV,CAAkBC,OAAlB,CAA0B,gBAA1B,CAAjB;MACH,CAFD,CAGA,OAAOC,CAAP,EAAU;QACNJ,cAAc,GAAG,IAAjB;MACH;;MACD,IAAI,CAACA,cAAD,IAAmB,CAAC,KAAKC,IAAL,CAAUI,cAAlC,EACI;MACJ,KAAKJ,IAAL,CAAUI,cAAV,CAAyBC,SAAzB,CAAmC,YAAnC,EAAiD,IAAjD;MACA,KAAKP,QAAL,GAAgB,IAAhB;IACH;;;WACD,kBAAS;MACL,IAAI,CAAC,KAAKA,QAAN,IAAkB,CAAC,KAAKE,IAAL,CAAUI,cAAjC,EACI;MACJ,KAAKJ,IAAL,CAAUI,cAAV,CAAyBC,SAAzB,CAAmC,YAAnC,EAAiD,KAAjD;MACA,KAAKP,QAAL,GAAgB,KAAhB;IACH;;;WACD,iBAAQ;MAAA;;MACJ,KAAKQ,OAAL,GAAeX,IAAI,CAACF,WAAW,CAAC,KAAKO,IAAL,CAAUC,OAAX,EAAoB,OAApB,EAA6B;QAAA,OAAM,MAAI,CAACM,OAAL,EAAN;MAAA,CAA7B,CAAZ,EAAgEd,WAAW,CAAC,KAAKO,IAAL,CAAUC,OAAX,EAAoB,MAApB,EAA4B;QAAA,OAAM,MAAI,CAACO,MAAL,EAAN;MAAA,CAA5B,CAA3E,CAAnB;IACH;;;WACD,mBAAU,CAAG;;;;EAjCUd,O;;AAoC3B,SAASE,YAAT"},"metadata":{},"sourceType":"module"}