{"ast":null,"code":"import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nvar positionalKeys = new Set([\"width\", \"height\", \"top\", \"left\", \"right\", \"bottom\", \"x\", \"y\", \"translateX\", \"translateY\"]);\n\nvar isNumOrPxType = function isNumOrPxType(v) {\n  return v === number || v === px;\n};\n\nvar getPosFromMatrix = function getPosFromMatrix(matrix, pos) {\n  return parseFloat(matrix.split(\", \")[pos]);\n};\n\nvar getTranslateFromMatrix = function getTranslateFromMatrix(pos2, pos3) {\n  return function (_bbox, _ref) {\n    var transform = _ref.transform;\n    if (transform === \"none\" || !transform) return 0;\n    var matrix3d = transform.match(/^matrix3d\\(((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)\\)$/);\n\n    if (matrix3d) {\n      return getPosFromMatrix(matrix3d[1], pos3);\n    } else {\n      var matrix = transform.match(/^matrix\\(((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)\\)$/);\n\n      if (matrix) {\n        return getPosFromMatrix(matrix[1], pos2);\n      } else {\n        return 0;\n      }\n    }\n  };\n};\n\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformPropOrder.filter(function (key) {\n  return !transformKeys.has(key);\n});\n\nfunction removeNonTranslationalTransform(visualElement) {\n  var removedTransforms = [];\n  nonTranslationalTransformKeys.forEach(function (key) {\n    var value = visualElement.getValue(key);\n\n    if (value !== undefined) {\n      removedTransforms.push([key, value.get()]);\n      value.set(key.startsWith(\"scale\") ? 1 : 0);\n    }\n  });\n  return removedTransforms;\n}\n\nvar positionalValues = {\n  // Dimensions\n  width: function width(_ref2, _ref3) {\n    var x = _ref2.x;\n    var _ref3$paddingLeft = _ref3.paddingLeft,\n        paddingLeft = _ref3$paddingLeft === void 0 ? \"0\" : _ref3$paddingLeft,\n        _ref3$paddingRight = _ref3.paddingRight,\n        paddingRight = _ref3$paddingRight === void 0 ? \"0\" : _ref3$paddingRight;\n    return x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight);\n  },\n  height: function height(_ref4, _ref5) {\n    var y = _ref4.y;\n    var _ref5$paddingTop = _ref5.paddingTop,\n        paddingTop = _ref5$paddingTop === void 0 ? \"0\" : _ref5$paddingTop,\n        _ref5$paddingBottom = _ref5.paddingBottom,\n        paddingBottom = _ref5$paddingBottom === void 0 ? \"0\" : _ref5$paddingBottom;\n    return y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom);\n  },\n  top: function top(_bbox, _ref6) {\n    var _top = _ref6.top;\n    return parseFloat(_top);\n  },\n  left: function left(_bbox, _ref7) {\n    var _left = _ref7.left;\n    return parseFloat(_left);\n  },\n  bottom: function bottom(_ref8, _ref9) {\n    var y = _ref8.y;\n    var top = _ref9.top;\n    return parseFloat(top) + (y.max - y.min);\n  },\n  right: function right(_ref10, _ref11) {\n    var x = _ref10.x;\n    var left = _ref11.left;\n    return parseFloat(left) + (x.max - x.min);\n  },\n  // Transform\n  x: getTranslateFromMatrix(4, 13),\n  y: getTranslateFromMatrix(5, 14)\n}; // Alias translate longform names\n\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };","map":{"version":3,"names":["transformPropOrder","number","px","positionalKeys","Set","isNumOrPxType","v","getPosFromMatrix","matrix","pos","parseFloat","split","getTranslateFromMatrix","pos2","pos3","_bbox","transform","matrix3d","match","transformKeys","nonTranslationalTransformKeys","filter","key","has","removeNonTranslationalTransform","visualElement","removedTransforms","forEach","value","getValue","undefined","push","get","set","startsWith","positionalValues","width","x","paddingLeft","paddingRight","max","min","height","y","paddingTop","paddingBottom","top","left","bottom","right","translateX","translateY"],"sources":["C:/Users/pvplo/OneDrive/Рабочий стол/editpallav-main/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs"],"sourcesContent":["import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}