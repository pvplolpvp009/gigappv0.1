{"ast":null,"code":"import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n  var style = state.style,\n      vars = state.vars,\n      transform = state.transform,\n      transformOrigin = state.transformOrigin; // Track whether we encounter any transform or transformOrigin values.\n\n  var hasTransform = false;\n  var hasTransformOrigin = false; // Does the calculated transform essentially equal \"none\"?\n\n  var transformIsNone = true;\n  /**\n   * Loop over all our latest animated values and decide whether to handle them\n   * as a style or CSS variable.\n   *\n   * Transforms and transform origins are kept seperately for further processing.\n   */\n\n  for (var key in latestValues) {\n    var value = latestValues[key];\n    /**\n     * If this is a CSS variable we don't do any further processing.\n     */\n\n    if (isCSSVariableName(key)) {\n      vars[key] = value;\n      continue;\n    } // Convert the value to its default value type, ie 0 -> \"0px\"\n\n\n    var valueType = numberValueTypes[key];\n    var valueAsType = getValueAsType(value, valueType);\n\n    if (transformProps.has(key)) {\n      // If this is a transform, flag to enable further transform processing\n      hasTransform = true;\n      transform[key] = valueAsType; // If we already know we have a non-default transform, early return\n\n      if (!transformIsNone) continue; // Otherwise check to see if this is a default transform\n\n      if (value !== (valueType.default || 0)) transformIsNone = false;\n    } else if (key.startsWith(\"origin\")) {\n      // If this is a transform origin, flag and enable further transform-origin processing\n      hasTransformOrigin = true;\n      transformOrigin[key] = valueAsType;\n    } else {\n      style[key] = valueAsType;\n    }\n  }\n\n  if (!latestValues.transform) {\n    if (hasTransform || transformTemplate) {\n      style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n    } else if (style.transform) {\n      /**\n       * If we have previously created a transform but currently don't have any,\n       * reset transform style to none.\n       */\n      style.transform = \"none\";\n    }\n  }\n  /**\n   * Build a transformOrigin style. Uses the same defaults as the browser for\n   * undefined origins.\n   */\n\n\n  if (hasTransformOrigin) {\n    var _transformOrigin$orig = transformOrigin.originX,\n        originX = _transformOrigin$orig === void 0 ? \"50%\" : _transformOrigin$orig,\n        _transformOrigin$orig2 = transformOrigin.originY,\n        originY = _transformOrigin$orig2 === void 0 ? \"50%\" : _transformOrigin$orig2,\n        _transformOrigin$orig3 = transformOrigin.originZ,\n        originZ = _transformOrigin$orig3 === void 0 ? 0 : _transformOrigin$orig3;\n    style.transformOrigin = \"\".concat(originX, \" \").concat(originY, \" \").concat(originZ);\n  }\n}\n\nexport { buildHTMLStyles };","map":{"version":3,"names":["buildTransform","isCSSVariableName","transformProps","getValueAsType","numberValueTypes","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transform","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","key","value","valueType","valueAsType","has","default","startsWith","originX","originY","originZ"],"sources":["C:/Users/pvplo/OneDrive/Рабочий стол/editpallav-main/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs"],"sourcesContent":["import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,uBAA/B;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,gBAAT,QAAiC,kCAAjC;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,YAAhC,EAA8CC,OAA9C,EAAuDC,iBAAvD,EAA0E;EACtE,IAAQC,KAAR,GAAoDJ,KAApD,CAAQI,KAAR;EAAA,IAAeC,IAAf,GAAoDL,KAApD,CAAeK,IAAf;EAAA,IAAqBC,SAArB,GAAoDN,KAApD,CAAqBM,SAArB;EAAA,IAAgCC,eAAhC,GAAoDP,KAApD,CAAgCO,eAAhC,CADsE,CAEtE;;EACA,IAAIC,YAAY,GAAG,KAAnB;EACA,IAAIC,kBAAkB,GAAG,KAAzB,CAJsE,CAKtE;;EACA,IAAIC,eAAe,GAAG,IAAtB;EACA;AACJ;AACA;AACA;AACA;AACA;;EACI,KAAK,IAAMC,GAAX,IAAkBV,YAAlB,EAAgC;IAC5B,IAAMW,KAAK,GAAGX,YAAY,CAACU,GAAD,CAA1B;IACA;AACR;AACA;;IACQ,IAAIhB,iBAAiB,CAACgB,GAAD,CAArB,EAA4B;MACxBN,IAAI,CAACM,GAAD,CAAJ,GAAYC,KAAZ;MACA;IACH,CAR2B,CAS5B;;;IACA,IAAMC,SAAS,GAAGf,gBAAgB,CAACa,GAAD,CAAlC;IACA,IAAMG,WAAW,GAAGjB,cAAc,CAACe,KAAD,EAAQC,SAAR,CAAlC;;IACA,IAAIjB,cAAc,CAACmB,GAAf,CAAmBJ,GAAnB,CAAJ,EAA6B;MACzB;MACAH,YAAY,GAAG,IAAf;MACAF,SAAS,CAACK,GAAD,CAAT,GAAiBG,WAAjB,CAHyB,CAIzB;;MACA,IAAI,CAACJ,eAAL,EACI,SANqB,CAOzB;;MACA,IAAIE,KAAK,MAAMC,SAAS,CAACG,OAAV,IAAqB,CAA3B,CAAT,EACIN,eAAe,GAAG,KAAlB;IACP,CAVD,MAWK,IAAIC,GAAG,CAACM,UAAJ,CAAe,QAAf,CAAJ,EAA8B;MAC/B;MACAR,kBAAkB,GAAG,IAArB;MACAF,eAAe,CAACI,GAAD,CAAf,GAAuBG,WAAvB;IACH,CAJI,MAKA;MACDV,KAAK,CAACO,GAAD,CAAL,GAAaG,WAAb;IACH;EACJ;;EACD,IAAI,CAACb,YAAY,CAACK,SAAlB,EAA6B;IACzB,IAAIE,YAAY,IAAIL,iBAApB,EAAuC;MACnCC,KAAK,CAACE,SAAN,GAAkBZ,cAAc,CAACM,KAAK,CAACM,SAAP,EAAkBJ,OAAlB,EAA2BQ,eAA3B,EAA4CP,iBAA5C,CAAhC;IACH,CAFD,MAGK,IAAIC,KAAK,CAACE,SAAV,EAAqB;MACtB;AACZ;AACA;AACA;MACYF,KAAK,CAACE,SAAN,GAAkB,MAAlB;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACI,IAAIG,kBAAJ,EAAwB;IACpB,4BAA2DF,eAA3D,CAAQW,OAAR;IAAA,IAAQA,OAAR,sCAAkB,KAAlB;IAAA,6BAA2DX,eAA3D,CAAyBY,OAAzB;IAAA,IAAyBA,OAAzB,uCAAmC,KAAnC;IAAA,6BAA2DZ,eAA3D,CAA0Ca,OAA1C;IAAA,IAA0CA,OAA1C,uCAAoD,CAApD;IACAhB,KAAK,CAACG,eAAN,aAA2BW,OAA3B,cAAsCC,OAAtC,cAAiDC,OAAjD;EACH;AACJ;;AAED,SAASrB,eAAT"},"metadata":{},"sourceType":"module"}