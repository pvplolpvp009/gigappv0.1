{"ast":null,"code":"import _objectSpread from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { spring } from '../../animation/generators/spring/index.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../animation/generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds } from '../../utils/time-conversion.mjs';\n/**\n * Create a progress => progress easing function from a generator.\n */\n\nfunction createGeneratorEasing(options) {\n  var scale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  var generator = spring(_objectSpread({\n    keyframes: [0, scale]\n  }, options));\n  var duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n  return {\n    type: \"keyframes\",\n    ease: function ease(progress) {\n      return generator.next(duration * progress).value / scale;\n    },\n    duration: millisecondsToSeconds(duration)\n  };\n}\n\nexport { createGeneratorEasing };","map":{"version":3,"names":["spring","calcGeneratorDuration","maxGeneratorDuration","millisecondsToSeconds","createGeneratorEasing","options","scale","generator","keyframes","duration","Math","min","type","ease","progress","next","value"],"sources":["C:/Users/pvplo/OneDrive/Рабочий стол/editpallav-main/node_modules/framer-motion/dist/es/easing/utils/create-generator-easing.mjs"],"sourcesContent":["import { spring } from '../../animation/generators/spring/index.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../animation/generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds } from '../../utils/time-conversion.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100) {\n    const generator = spring({ keyframes: [0, scale], ...options });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => generator.next(duration * progress).value / scale,\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n"],"mappings":";AAAA,SAASA,MAAT,QAAuB,6CAAvB;AACA,SAASC,qBAAT,EAAgCC,oBAAhC,QAA4D,oDAA5D;AACA,SAASC,qBAAT,QAAsC,iCAAtC;AAEA;AACA;AACA;;AACA,SAASC,qBAAT,CAA+BC,OAA/B,EAAqD;EAAA,IAAbC,KAAa,uEAAL,GAAK;EACjD,IAAMC,SAAS,GAAGP,MAAM;IAAGQ,SAAS,EAAE,CAAC,CAAD,EAAIF,KAAJ;EAAd,GAA6BD,OAA7B,EAAxB;EACA,IAAMI,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASV,qBAAqB,CAACM,SAAD,CAA9B,EAA2CL,oBAA3C,CAAjB;EACA,OAAO;IACHU,IAAI,EAAE,WADH;IAEHC,IAAI,EAAE,cAACC,QAAD;MAAA,OAAcP,SAAS,CAACQ,IAAV,CAAeN,QAAQ,GAAGK,QAA1B,EAAoCE,KAApC,GAA4CV,KAA1D;IAAA,CAFH;IAGHG,QAAQ,EAAEN,qBAAqB,CAACM,QAAD;EAH5B,CAAP;AAKH;;AAED,SAASL,qBAAT"},"metadata":{},"sourceType":"module"}