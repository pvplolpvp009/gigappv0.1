{"ast":null,"code":"import _slicedToArray from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n  var isMounted = useIsMounted();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      forcedRenderCount = _useState2[0],\n      setForcedRenderCount = _useState2[1];\n\n  var forceRender = useCallback(function () {\n    isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n  }, [forcedRenderCount]);\n  /**\n   * Defer this to the end of the next animation frame in case there are multiple\n   * synchronous calls.\n   */\n\n  var deferredForceRender = useCallback(function () {\n    return frame.postRender(forceRender);\n  }, [forceRender]);\n  return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };","map":{"version":3,"names":["useState","useCallback","useIsMounted","frame","useForceUpdate","isMounted","forcedRenderCount","setForcedRenderCount","forceRender","current","deferredForceRender","postRender"],"sources":["C:/Users/pvplo/OneDrive/Рабочий стол/editpallav-main/node_modules/framer-motion/dist/es/utils/use-force-update.mjs"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,KAAT,QAAsB,wBAAtB;;AAEA,SAASC,cAAT,GAA0B;EACtB,IAAMC,SAAS,GAAGH,YAAY,EAA9B;;EACA,gBAAkDF,QAAQ,CAAC,CAAD,CAA1D;EAAA;EAAA,IAAOM,iBAAP;EAAA,IAA0BC,oBAA1B;;EACA,IAAMC,WAAW,GAAGP,WAAW,CAAC,YAAM;IAClCI,SAAS,CAACI,OAAV,IAAqBF,oBAAoB,CAACD,iBAAiB,GAAG,CAArB,CAAzC;EACH,CAF8B,EAE5B,CAACA,iBAAD,CAF4B,CAA/B;EAGA;AACJ;AACA;AACA;;EACI,IAAMI,mBAAmB,GAAGT,WAAW,CAAC;IAAA,OAAME,KAAK,CAACQ,UAAN,CAAiBH,WAAjB,CAAN;EAAA,CAAD,EAAsC,CAACA,WAAD,CAAtC,CAAvC;EACA,OAAO,CAACE,mBAAD,EAAsBJ,iBAAtB,CAAP;AACH;;AAED,SAASF,cAAT"},"metadata":{},"sourceType":"module"}