{"ast":null,"code":"import _classCallCheck from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n  var eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n  var callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n\n  var handleEvent = function handleEvent(event, info) {\n    if (event.pointerType === \"touch\" || isDragActive()) return;\n    var props = node.getProps();\n\n    if (node.animationState && props.whileHover) {\n      node.animationState.setActive(\"whileHover\", isActive);\n    }\n\n    var callback = props[callbackName];\n\n    if (callback) {\n      frame.postRender(function () {\n        return callback(event, info);\n      });\n    }\n  };\n\n  return addPointerEvent(node.current, eventName, handleEvent, {\n    passive: !node.getProps()[callbackName]\n  });\n}\n\nvar HoverGesture = /*#__PURE__*/function (_Feature) {\n  _inherits(HoverGesture, _Feature);\n\n  var _super = _createSuper(HoverGesture);\n\n  function HoverGesture() {\n    _classCallCheck(this, HoverGesture);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HoverGesture, [{\n    key: \"mount\",\n    value: function mount() {\n      this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {}\n  }]);\n\n  return HoverGesture;\n}(Feature);\n\nexport { HoverGesture };","map":{"version":3,"names":["addPointerEvent","pipe","isDragActive","Feature","frame","addHoverEvent","node","isActive","eventName","callbackName","handleEvent","event","info","pointerType","props","getProps","animationState","whileHover","setActive","callback","postRender","current","passive","HoverGesture","unmount"],"sources":["C:/Users/pvplo/OneDrive/Рабочий стол/editpallav-main/node_modules/framer-motion/dist/es/gestures/hover.mjs"],"sourcesContent":["import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n"],"mappings":";;;;AAAA,SAASA,eAAT,QAAgC,iCAAhC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,wBAAtB;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,QAA7B,EAAuC;EACnC,IAAMC,SAAS,GAAGD,QAAQ,GAAG,cAAH,GAAoB,cAA9C;EACA,IAAME,YAAY,GAAGF,QAAQ,GAAG,cAAH,GAAoB,YAAjD;;EACA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,IAAR,EAAiB;IACjC,IAAID,KAAK,CAACE,WAAN,KAAsB,OAAtB,IAAiCX,YAAY,EAAjD,EACI;IACJ,IAAMY,KAAK,GAAGR,IAAI,CAACS,QAAL,EAAd;;IACA,IAAIT,IAAI,CAACU,cAAL,IAAuBF,KAAK,CAACG,UAAjC,EAA6C;MACzCX,IAAI,CAACU,cAAL,CAAoBE,SAApB,CAA8B,YAA9B,EAA4CX,QAA5C;IACH;;IACD,IAAMY,QAAQ,GAAGL,KAAK,CAACL,YAAD,CAAtB;;IACA,IAAIU,QAAJ,EAAc;MACVf,KAAK,CAACgB,UAAN,CAAiB;QAAA,OAAMD,QAAQ,CAACR,KAAD,EAAQC,IAAR,CAAd;MAAA,CAAjB;IACH;EACJ,CAXD;;EAYA,OAAOZ,eAAe,CAACM,IAAI,CAACe,OAAN,EAAeb,SAAf,EAA0BE,WAA1B,EAAuC;IACzDY,OAAO,EAAE,CAAChB,IAAI,CAACS,QAAL,GAAgBN,YAAhB;EAD+C,CAAvC,CAAtB;AAGH;;IACKc,Y;;;;;;;;;;;;;WACF,iBAAQ;MACJ,KAAKC,OAAL,GAAevB,IAAI,CAACI,aAAa,CAAC,KAAKC,IAAN,EAAY,IAAZ,CAAd,EAAiCD,aAAa,CAAC,KAAKC,IAAN,EAAY,KAAZ,CAA9C,CAAnB;IACH;;;WACD,mBAAU,CAAG;;;;EAJUH,O;;AAO3B,SAASoB,YAAT"},"metadata":{},"sourceType":"module"}