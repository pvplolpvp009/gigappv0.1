{"ast":null,"code":"import _defineProperty from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes) {\n  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 0 : _ref$delay,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 300 : _ref$duration,\n      _ref$repeat = _ref.repeat,\n      repeat = _ref$repeat === void 0 ? 0 : _ref$repeat,\n      _ref$repeatType = _ref.repeatType,\n      repeatType = _ref$repeatType === void 0 ? \"loop\" : _ref$repeatType,\n      ease = _ref.ease,\n      times = _ref.times;\n\n  var keyframeOptions = _defineProperty({}, valueName, keyframes);\n\n  if (times) keyframeOptions.offset = times;\n  var easing = mapEasingToNativeEasing(ease);\n  /**\n   * If this is an easing array, apply to keyframes, not animation as a whole\n   */\n\n  if (Array.isArray(easing)) keyframeOptions.easing = easing;\n  return element.animate(keyframeOptions, {\n    delay: delay,\n    duration: duration,\n    easing: !Array.isArray(easing) ? easing : \"linear\",\n    fill: \"both\",\n    iterations: repeat + 1,\n    direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\"\n  });\n}\n\nexport { animateStyle };","map":{"version":3,"names":["mapEasingToNativeEasing","animateStyle","element","valueName","keyframes","delay","duration","repeat","repeatType","ease","times","keyframeOptions","offset","easing","Array","isArray","animate","fill","iterations","direction"],"sources":["C:/Users/pvplo/OneDrive/Рабочий стол/editpallav-main/node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs"],"sourcesContent":["import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n"],"mappings":";AAAA,SAASA,uBAAT,QAAwC,cAAxC;;AAEA,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,SAA/B,EAA0CC,SAA1C,EAAwI;EAAA,+EAAJ,EAAI;EAAA,sBAAjFC,KAAiF;EAAA,IAAjFA,KAAiF,2BAAzE,CAAyE;EAAA,yBAAtEC,QAAsE;EAAA,IAAtEA,QAAsE,8BAA3D,GAA2D;EAAA,uBAAtDC,MAAsD;EAAA,IAAtDA,MAAsD,4BAA7C,CAA6C;EAAA,2BAA1CC,UAA0C;EAAA,IAA1CA,UAA0C,gCAA7B,MAA6B;EAAA,IAArBC,IAAqB,QAArBA,IAAqB;EAAA,IAAfC,KAAe,QAAfA,KAAe;;EACpI,IAAMC,eAAe,uBAAMR,SAAN,EAAkBC,SAAlB,CAArB;;EACA,IAAIM,KAAJ,EACIC,eAAe,CAACC,MAAhB,GAAyBF,KAAzB;EACJ,IAAMG,MAAM,GAAGb,uBAAuB,CAACS,IAAD,CAAtC;EACA;AACJ;AACA;;EACI,IAAIK,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EACIF,eAAe,CAACE,MAAhB,GAAyBA,MAAzB;EACJ,OAAOX,OAAO,CAACc,OAAR,CAAgBL,eAAhB,EAAiC;IACpCN,KAAK,EAALA,KADoC;IAEpCC,QAAQ,EAARA,QAFoC;IAGpCO,MAAM,EAAE,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAD,GAAyBA,MAAzB,GAAkC,QAHN;IAIpCI,IAAI,EAAE,MAJ8B;IAKpCC,UAAU,EAAEX,MAAM,GAAG,CALe;IAMpCY,SAAS,EAAEX,UAAU,KAAK,SAAf,GAA2B,WAA3B,GAAyC;EANhB,CAAjC,CAAP;AAQH;;AAED,SAASP,YAAT"},"metadata":{},"sourceType":"module"}