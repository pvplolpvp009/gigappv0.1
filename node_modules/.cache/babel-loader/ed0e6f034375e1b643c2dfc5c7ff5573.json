{"ast":null,"code":"import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  visualElement.notify(\"AnimationStart\", definition);\n  var animation;\n\n  if (Array.isArray(definition)) {\n    var animations = definition.map(function (variant) {\n      return animateVariant(visualElement, variant, options);\n    });\n    animation = Promise.all(animations);\n  } else if (typeof definition === \"string\") {\n    animation = animateVariant(visualElement, definition, options);\n  } else {\n    var resolvedDefinition = typeof definition === \"function\" ? resolveVariant(visualElement, definition, options.custom) : definition;\n    animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n  }\n\n  return animation.then(function () {\n    frame.postRender(function () {\n      visualElement.notify(\"AnimationComplete\", definition);\n    });\n  });\n}\n\nexport { animateVisualElement };","map":{"version":3,"names":["resolveVariant","animateTarget","animateVariant","frame","animateVisualElement","visualElement","definition","options","notify","animation","Array","isArray","animations","map","variant","Promise","all","resolvedDefinition","custom","then","postRender"],"sources":["C:/Users/pvplo/OneDrive/Рабочий стол/editpallav-main/node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs"],"sourcesContent":["import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,iDAA/B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,KAAT,QAAsB,2BAAtB;;AAEA,SAASC,oBAAT,CAA8BC,aAA9B,EAA6CC,UAA7C,EAAuE;EAAA,IAAdC,OAAc,uEAAJ,EAAI;EACnEF,aAAa,CAACG,MAAd,CAAqB,gBAArB,EAAuCF,UAAvC;EACA,IAAIG,SAAJ;;EACA,IAAIC,KAAK,CAACC,OAAN,CAAcL,UAAd,CAAJ,EAA+B;IAC3B,IAAMM,UAAU,GAAGN,UAAU,CAACO,GAAX,CAAe,UAACC,OAAD;MAAA,OAAaZ,cAAc,CAACG,aAAD,EAAgBS,OAAhB,EAAyBP,OAAzB,CAA3B;IAAA,CAAf,CAAnB;IACAE,SAAS,GAAGM,OAAO,CAACC,GAAR,CAAYJ,UAAZ,CAAZ;EACH,CAHD,MAIK,IAAI,OAAON,UAAP,KAAsB,QAA1B,EAAoC;IACrCG,SAAS,GAAGP,cAAc,CAACG,aAAD,EAAgBC,UAAhB,EAA4BC,OAA5B,CAA1B;EACH,CAFI,MAGA;IACD,IAAMU,kBAAkB,GAAG,OAAOX,UAAP,KAAsB,UAAtB,GACrBN,cAAc,CAACK,aAAD,EAAgBC,UAAhB,EAA4BC,OAAO,CAACW,MAApC,CADO,GAErBZ,UAFN;IAGAG,SAAS,GAAGM,OAAO,CAACC,GAAR,CAAYf,aAAa,CAACI,aAAD,EAAgBY,kBAAhB,EAAoCV,OAApC,CAAzB,CAAZ;EACH;;EACD,OAAOE,SAAS,CAACU,IAAV,CAAe,YAAM;IACxBhB,KAAK,CAACiB,UAAN,CAAiB,YAAM;MACnBf,aAAa,CAACG,MAAd,CAAqB,mBAArB,EAA0CF,UAA1C;IACH,CAFD;EAGH,CAJM,CAAP;AAKH;;AAED,SAASF,oBAAT"},"metadata":{},"sourceType":"module"}