{"ast":null,"code":"import _slicedToArray from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pvplo/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/editpallav-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport nacl from 'tweetnacl-util';\nimport nacl$1 from 'tweetnacl';\nvar CONNECT_EVENT_ERROR_CODES;\n\n(function (CONNECT_EVENT_ERROR_CODES) {\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_NOT_FOUND_ERROR\"] = 2] = \"MANIFEST_NOT_FOUND_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_CONTENT_ERROR\"] = 3] = \"MANIFEST_CONTENT_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_EVENT_ERROR_CODES || (CONNECT_EVENT_ERROR_CODES = {}));\n\nvar CONNECT_ITEM_ERROR_CODES;\n\n(function (CONNECT_ITEM_ERROR_CODES) {\n  CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (CONNECT_ITEM_ERROR_CODES = {}));\n\nvar SEND_TRANSACTION_ERROR_CODES;\n\n(function (SEND_TRANSACTION_ERROR_CODES) {\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SEND_TRANSACTION_ERROR_CODES || (SEND_TRANSACTION_ERROR_CODES = {}));\n\nvar SIGN_DATA_ERROR_CODES;\n\n(function (SIGN_DATA_ERROR_CODES) {\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SIGN_DATA_ERROR_CODES || (SIGN_DATA_ERROR_CODES = {}));\n\nvar DISCONNECT_ERROR_CODES;\n\n(function (DISCONNECT_ERROR_CODES) {\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(DISCONNECT_ERROR_CODES || (DISCONNECT_ERROR_CODES = {}));\n\nvar CHAIN;\n\n(function (CHAIN) {\n  CHAIN[\"MAINNET\"] = \"-239\";\n  CHAIN[\"TESTNET\"] = \"-3\";\n})(CHAIN || (CHAIN = {}));\n\nfunction encodeUint8Array(value, urlSafe) {\n  var encoded = nacl.encodeBase64(value);\n\n  if (!urlSafe) {\n    return encoded;\n  }\n\n  return encodeURIComponent(encoded);\n}\n\nfunction decodeToUint8Array(value, urlSafe) {\n  if (urlSafe) {\n    value = decodeURIComponent(value);\n  }\n\n  return nacl.decodeBase64(value);\n}\n\nfunction encode(value) {\n  var urlSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var uint8Array;\n\n  if (value instanceof Uint8Array) {\n    uint8Array = value;\n  } else {\n    if (typeof value !== 'string') {\n      value = JSON.stringify(value);\n    }\n\n    uint8Array = nacl.decodeUTF8(value);\n  }\n\n  return encodeUint8Array(uint8Array, urlSafe);\n}\n\nfunction decode(value) {\n  var urlSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var decodedUint8Array = decodeToUint8Array(value, urlSafe);\n  return {\n    toString: function toString() {\n      return nacl.encodeUTF8(decodedUint8Array);\n    },\n    toObject: function toObject() {\n      try {\n        return JSON.parse(nacl.encodeUTF8(decodedUint8Array));\n      } catch (e) {\n        return null;\n      }\n    },\n    toUint8Array: function toUint8Array() {\n      return decodedUint8Array;\n    }\n  };\n}\n\nvar Base64 = {\n  encode: encode,\n  decode: decode\n};\n\nfunction concatUint8Arrays(buffer1, buffer2) {\n  var mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n  mergedArray.set(buffer1);\n  mergedArray.set(buffer2, buffer1.length);\n  return mergedArray;\n}\n\nfunction splitToUint8Arrays(array, index) {\n  if (index >= array.length) {\n    throw new Error('Index is out of buffer');\n  }\n\n  var subArray1 = array.slice(0, index);\n  var subArray2 = array.slice(index);\n  return [subArray1, subArray2];\n}\n\nfunction toHexString(byteArray) {\n  var hexString = '';\n  byteArray.forEach(function (byte) {\n    hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n  });\n  return hexString;\n}\n\nfunction hexToByteArray(hexString) {\n  if (hexString.length % 2 !== 0) {\n    throw new Error(\"Cannot convert \".concat(hexString, \" to bytesArray\"));\n  }\n\n  var result = new Uint8Array(hexString.length / 2);\n\n  for (var i = 0; i < hexString.length; i += 2) {\n    result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n  }\n\n  return result;\n}\n\nfunction isNode() {\n  return typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n}\n\nvar SessionCrypto = /*#__PURE__*/function () {\n  function SessionCrypto(keyPair) {\n    _classCallCheck(this, SessionCrypto);\n\n    this.nonceLength = 24;\n    this.keyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    this.sessionId = toHexString(this.keyPair.publicKey);\n  }\n\n  _createClass(SessionCrypto, [{\n    key: \"createKeypair\",\n    value: function createKeypair() {\n      return nacl$1.box.keyPair();\n    }\n  }, {\n    key: \"createKeypairFromString\",\n    value: function createKeypairFromString(keyPair) {\n      return {\n        publicKey: hexToByteArray(keyPair.publicKey),\n        secretKey: hexToByteArray(keyPair.secretKey)\n      };\n    }\n  }, {\n    key: \"createNonce\",\n    value: function createNonce() {\n      return nacl$1.randomBytes(this.nonceLength);\n    }\n  }, {\n    key: \"encrypt\",\n    value: function encrypt(message, receiverPublicKey) {\n      var encodedMessage = new TextEncoder().encode(message);\n      var nonce = this.createNonce();\n      var encrypted = nacl$1.box(encodedMessage, nonce, receiverPublicKey, this.keyPair.secretKey);\n      return concatUint8Arrays(nonce, encrypted);\n    }\n  }, {\n    key: \"decrypt\",\n    value: function decrypt(message, senderPublicKey) {\n      var _splitToUint8Arrays = splitToUint8Arrays(message, this.nonceLength),\n          _splitToUint8Arrays2 = _slicedToArray(_splitToUint8Arrays, 2),\n          nonce = _splitToUint8Arrays2[0],\n          internalMessage = _splitToUint8Arrays2[1];\n\n      var decrypted = nacl$1.box.open(internalMessage, nonce, senderPublicKey, this.keyPair.secretKey);\n\n      if (!decrypted) {\n        throw new Error(\"Decryption error: \\n message: \".concat(message.toString(), \" \\n sender pubkey: \").concat(senderPublicKey.toString(), \" \\n keypair pubkey: \").concat(this.keyPair.publicKey.toString(), \" \\n keypair secretkey: \").concat(this.keyPair.secretKey.toString()));\n      }\n\n      return new TextDecoder().decode(decrypted);\n    }\n  }, {\n    key: \"stringifyKeypair\",\n    value: function stringifyKeypair() {\n      return {\n        publicKey: toHexString(this.keyPair.publicKey),\n        secretKey: toHexString(this.keyPair.secretKey)\n      };\n    }\n  }]);\n\n  return SessionCrypto;\n}();\n\nexport { Base64, CHAIN, CONNECT_EVENT_ERROR_CODES, CONNECT_ITEM_ERROR_CODES, DISCONNECT_ERROR_CODES, SEND_TRANSACTION_ERROR_CODES, SIGN_DATA_ERROR_CODES, SessionCrypto, concatUint8Arrays, hexToByteArray, isNode, splitToUint8Arrays, toHexString };","map":{"version":3,"mappings":"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","names":["CONNECT_EVENT_ERROR_CODES","CONNECT_ITEM_ERROR_CODES","SEND_TRANSACTION_ERROR_CODES","SIGN_DATA_ERROR_CODES","DISCONNECT_ERROR_CODES","CHAIN","encodeUint8Array","value","urlSafe","encoded","nacl","encodeBase64","encodeURIComponent","decodeToUint8Array","decodeURIComponent","decodeBase64","encode","uint8Array","Uint8Array","JSON","stringify","decodeUTF8","decode","decodedUint8Array","toString","encodeUTF8","toObject","parse","e","toUint8Array","buffer1","buffer2","mergedArray","length","set","array","index","Error","subArray1","slice","subArray2","toHexString","byteArray","hexString","forEach","byte","hexToByteArray","result","i","parseInt","isNode","process","versions","node","SessionCrypto","keyPair","nonceLength","createKeypairFromString","createKeypair","sessionId","publicKey","box","secretKey","randomBytes","message","receiverPublicKey","encodedMessage","TextEncoder","nonce","createNonce","encrypted","concatUint8Arrays","senderPublicKey","splitToUint8Arrays","internalMessage","decrypted","open","TextDecoder"],"sources":["../../src/models/wallet-message/wallet-event/connect-event.ts","../../src/models/wallet-message/wallet-response/send-transaction-rpc-response.ts","../../src/models/wallet-message/wallet-response/sign-data-rpc-response.ts","../../src/models/wallet-message/wallet-response/disconnect-rpc-response.ts","../../src/models/CHAIN.ts","../../src/utils/base64.ts","../../src/utils/binary.ts","../../src/utils/web-api.ts","../../src/crypto/session-crypto.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null]},"metadata":{},"sourceType":"module"}